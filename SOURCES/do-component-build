#!/bin/bash
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -ex

if [ -z "$GIT_REPO" ]; then
    # We're building.

    # ./thirdparty/build-if-necessary.sh does not work outside of a git
    # repo, so we always rebuild thirdparty. It's unfortunate, but the only
    # side effect is a slower build.
    #
    # TODO: Convert to Cloudera Toolchain.
    ENABLE_DEVTOOLSET="$(pwd)/build-support/enable_devtoolset.sh"
    ${ENABLE_DEVTOOLSET} ./thirdparty/download-thirdparty.sh
    ${ENABLE_DEVTOOLSET} ./thirdparty/build-thirdparty.sh

    # Force cmake to omit the call to build-if-necessary.sh.
    export NO_REBUILD_THIRDPARTY=1

    CMAKE="$(pwd)/thirdparty/installed/common/bin/cmake"

    # Always static link.
    CMAKE="${CMAKE} -DKUDU_LINK=static"

    # Skip building of unit tests to save time.
    CMAKE="${CMAKE} -DNO_TESTS=1"

    # Provide the git hash collected earlier.
    if [ -f kudu_git_hash ];then
        KUDU_GIT_HASH=$(cat kudu_git_hash)
    else
       if [ -n "$WORKSPACE" ];then
           KUDU_GIT_HASH=$(cat "$WORKSPACE/kudu_git_hash")
       fi
    fi
    CMAKE="${CMAKE} -DKUDU_GIT_HASH=$KUDU_GIT_HASH"

    # Set parallelism level based on the number of CPUs.
    MAKE="make -j$(nproc)"
    for type in release fastdebug; do
      mkdir -p build/${type}
      pushd build/${type}
      rm -rf CMakeCache.txt CMakeFiles/
      ${ENABLE_DEVTOOLSET} ${CMAKE} -DCMAKE_BUILD_TYPE=${type} ../..
      ${MAKE}
      ${MAKE} install DESTDIR=$(pwd)/client
      popd
    done

    pushd java
    ./gradlew assemble
    popd

else
    # Collect the git hash to be used by the build.
    echo $(cd "$GIT_REPO" && git rev-parse HEAD) > kudu_git_hash

    # We're packaging up the source code to be built.
    rm -rf build apache-kudu-${FULL_VERSION}
    ALL_FILES=`echo *`
    mkdir build apache-kudu-${FULL_VERSION}
    cp -r $ALL_FILES apache-kudu-${FULL_VERSION}
    tar czf build/apache-kudu-${FULL_VERSION}.tar.gz apache-kudu-${FULL_VERSION}
fi

